{"version":3,"sources":["../src/controllers/author/author.post.ts"],"names":[],"mappings":";;AAEA,qDAAkD;AAClD,mDAAoE;AAEpE,yBAAgC,GAAY,EAAE,GAAa;IACzD,MAAM,MAAM,GAAW,wBAAgB,CAAE,GAAG,CAAC,CAAC;IAC9C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,uBAAU,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC;SACrC,IAAI,CAAC,MAAM,CAAC,EAAE,CACb,GAAG;SACA,MAAM,CAAC,GAAG,CAAC;SACX,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CACpE;SACA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAbD,0CAaC","file":"author.post.js","sourcesContent":["import { Request, Response } from \"express\";\r\nimport * as Bluebird from \"bluebird\";\r\nimport { AuthorsDao } from \"../../dao/_index.dao\";\r\nimport { Result, validationResult  } from \"express-validator/check\";\r\n\r\nexport function createNewAuthor(req: Request, res: Response): Response | Bluebird<any> {\r\n  const errors: Result = validationResult (req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(422).json({ errors: errors.mapped() });\r\n  }\r\n\r\n  return AuthorsDao.createAuthor(req.body)\r\n    .then(author =>\r\n      res\r\n        .status(200)\r\n        .send({ author: author, message: \"Author created successfully\" })\r\n    )\r\n    .catch(err => console.log(err));\r\n}\r\n"],"sourceRoot":"../../../src"}