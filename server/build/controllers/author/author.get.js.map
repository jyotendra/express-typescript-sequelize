{"version":3,"sources":["../src/controllers/author/author.get.ts"],"names":[],"mappings":";;AAEA,qDAAkD;AAGlD,oBAA2B,GAAY,EAAE,GAAa;IACpD,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IACD,MAAM,CAAC,uBAAU,CAAC,OAAO,EAAE;SACxB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAPD,gCAOC","file":"author.get.js","sourcesContent":["import { Request, Response } from \"express\";\r\nimport * as Bluebird from \"bluebird\";\r\nimport { AuthorsDao } from \"../../dao/_index.dao\";\r\nimport { IAuthorInstance } from \"../../db/models/author.model\";\r\n\r\nexport function getAuthors(req: Request, res: Response): Bluebird<any> {\r\n  if(1 === 1) {\r\n    throw new Error('dededed');\r\n  }\r\n  return AuthorsDao.findAll()\r\n    .then(authors => res.status(200).send(authors))\r\n    .catch(err => console.log(err));\r\n}\r\n"],"sourceRoot":"../../../src"}