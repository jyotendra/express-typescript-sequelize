{"version":3,"sources":["../src/validators/author/author.validator.ts"],"names":[],"mappings":";;AAAA,mDAAgD;AAEhD,4BAA4B;AAE5B,MAAM,mBAAmB,GAAQ;IAC/B,SAAS,EAAE,aAAK,CAAC,WAAW,CAAC;SAC1B,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;SAC7B,WAAW,CAAC,+CAA+C,CAAC;IAE/D,QAAQ,EAAE,aAAK,CAAC,UAAU,CAAC;SACxB,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;SAC7B,WAAW,CAAC,+CAA+C,CAAC;IAE/D,KAAK,EAAE,aAAK,CAAC,OAAO,CAAC;SAClB,OAAO,EAAE;SACT,WAAW,CAAC,kBAAkB,CAAC;CACnC,CAAC;AAEW,QAAA,gBAAgB,GAAe,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC","file":"author.validator.js","sourcesContent":["import { check } from \"express-validator/check\";\r\nimport { sanitize } from \"express-validator/filter\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst authorValidatorsObj: any = {\r\n  firstName: check(\"firstName\")\r\n    .isLength({ min: 3, max: 10 })\r\n    .withMessage(\"firstName should not be greater than 10 chars\"),\r\n\r\n  lastName: check(\"lastName\")\r\n    .isLength({ min: 3, max: 10 })\r\n    .withMessage(\"firstName should not be greater than 10 chars\"),\r\n\r\n  email: check(\"email\")\r\n    .isEmail()\r\n    .withMessage(\"Email is invalid\")\r\n};\r\n\r\nexport const authorValidators: Array<any> = _.values(authorValidatorsObj);\r\n"],"sourceRoot":"../../../src"}