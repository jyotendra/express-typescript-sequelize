{"version":3,"sources":["../src/utils/bcrypter.util.ts"],"names":[],"mappings":";;AAAA,iCAAiC;AACjC,qCAAqC;AAErC,MAAM,UAAU,GAAW,EAAE,CAAC;AAG9B,iBAAwB,IAAY;IAChC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;AAC3D,CAAC;AAFD,0BAEC;AAED,qBAA4B,IAAY,EAAE,UAAkB;IACxD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;AAC9D,CAAC;AAFD,kCAEC","file":"bcrypter.util.js","sourcesContent":["import * as bcrypt from \"bcrypt\";\r\nimport * as bluebird from \"bluebird\";\r\n\r\nconst saltRounds: number = 10;\r\n\r\n\r\nexport function getHash(pass: string): bluebird<string> {\r\n    return bluebird.resolve(bcrypt.hash(pass, saltRounds));\r\n}\r\n\r\nexport function compareHash(pass: string, hashedPass: string): bluebird<boolean> {\r\n    return bluebird.resolve(bcrypt.compare(pass, hashedPass));\r\n}"],"sourceRoot":"../../src"}